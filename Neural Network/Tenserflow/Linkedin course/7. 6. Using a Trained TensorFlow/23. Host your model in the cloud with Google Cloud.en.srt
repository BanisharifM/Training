1
00:00:00.05 --> 00:00:02.05
- [Instructor] The advantage
of hosting your model

2
00:00:02.05 --> 00:00:03.04
in the Google Cloud

3
00:00:03.04 --> 00:00:06.07
is that it is accessible
from anywhere in the world.

4
00:00:06.07 --> 00:00:08.05
Google servers will run the model,

5
00:00:08.05 --> 00:00:09.07
and you are only charged based on

6
00:00:09.07 --> 00:00:11.05
how many requests are made.

7
00:00:11.05 --> 00:00:12.06
It's a great option for using

8
00:00:12.06 --> 00:00:14.03
a TensorFlow model in production

9
00:00:14.03 --> 00:00:16.09
if you don't want to
maintain your own servers.

10
00:00:16.09 --> 00:00:19.05
Let's learn how to upload
a custom TensorFlow model

11
00:00:19.05 --> 00:00:22.02
to the Google Cloud ML service.

12
00:00:22.02 --> 00:00:23.03
Before we get started,

13
00:00:23.03 --> 00:00:26.07
make sure you have already
exported the model as a .pb file.

14
00:00:26.07 --> 00:00:27.09
You can do that by running

15
00:00:27.09 --> 00:00:30.04
export_model_for_cloud final in PyCharm,

16
00:00:30.04 --> 00:00:33.03
if you haven't already.

17
00:00:33.03 --> 00:00:34.07
Also, make sure that you have

18
00:00:34.07 --> 00:00:36.09
a properly configured
Google Cloud account,

19
00:00:36.09 --> 00:00:39.05
with access to the
Google Cloud ML service,

20
00:00:39.05 --> 00:00:41.09
and that you have the
gcloud command line tool

21
00:00:41.09 --> 00:00:43.04
already installed.

22
00:00:43.04 --> 00:00:44.08
You can review the previous video

23
00:00:44.08 --> 00:00:48.02
if you don't have those
two things available yet.

24
00:00:48.02 --> 00:00:50.05
I have my machine learning
model exported here,

25
00:00:50.05 --> 00:00:52.07
to the exported_model subfolder.

26
00:00:52.07 --> 00:00:56.05
To use this model in the
Cloud, it's a two-step process.

27
00:00:56.05 --> 00:00:58.07
First, we'll upload the model files

28
00:00:58.07 --> 00:01:00.09
to a Google Cloud storage bucket.

29
00:01:00.09 --> 00:01:03.07
Then, we'll create a new Google
Cloud machine learning model

30
00:01:03.07 --> 00:01:06.00
using the files we've uploaded.

31
00:01:06.00 --> 00:01:07.05
Once the model is in the Cloud,

32
00:01:07.05 --> 00:01:10.03
we can use it by sending it data.

33
00:01:10.03 --> 00:01:12.06
I've included a sample data file here

34
00:01:12.06 --> 00:01:15.07
called sample_input_prescaled.json.

35
00:01:15.07 --> 00:01:17.08
This data is a simple JSON file

36
00:01:17.08 --> 00:01:19.07
with the name of the model's input,

37
00:01:19.07 --> 00:01:22.08
and then the values you
want to feed into the model.

38
00:01:22.08 --> 00:01:24.04
To work with the Google Cloud service,

39
00:01:24.04 --> 00:01:26.01
we're going to use the command line.

40
00:01:26.01 --> 00:01:29.02
Open up a Terminal
window on your computer,

41
00:01:29.02 --> 00:01:30.06
and then navigate to the folder

42
00:01:30.06 --> 00:01:32.06
where your model is exported.

43
00:01:32.06 --> 00:01:38.05
In my case, that's
Desktop/Exercise\ Files/06/.

44
00:01:38.05 --> 00:01:39.09
Now we can upload the model files

45
00:01:39.09 --> 00:01:41.09
to a Google Cloud storage bucket.

46
00:01:41.09 --> 00:01:44.01
We'll do that with this command.

47
00:01:44.01 --> 00:01:46.04
Here, we're calling gsutil.

48
00:01:46.04 --> 00:01:48.04
Gsutil is a utility that handles

49
00:01:48.04 --> 00:01:50.09
lots of basic Google Service operations,

50
00:01:50.09 --> 00:01:52.05
like creating new storage buckets,

51
00:01:52.05 --> 00:01:55.09
moving files around, changing
permissions, and so on.

52
00:01:55.09 --> 00:01:59.00
mb stands for "Make bucket."

53
00:01:59.00 --> 00:02:01.05
Next, we have to tell
Google which data center

54
00:02:01.05 --> 00:02:03.04
to create the bucket in.

55
00:02:03.04 --> 00:02:05.04
Google has data centers
all over the world,

56
00:02:05.04 --> 00:02:07.09
and you have to tell them
which one you want to use.

57
00:02:07.09 --> 00:02:09.06
I used us-central1,

58
00:02:09.06 --> 00:02:12.06
which is located in Iowa
in the United States.

59
00:02:12.06 --> 00:02:14.06
You can use that one, too.

60
00:02:14.06 --> 00:02:16.09
Then, we have to name the storage bucket.

61
00:02:16.09 --> 00:02:19.09
These names have to be unique
across the entire world,

62
00:02:19.09 --> 00:02:22.04
so you'll have to use a slightly
different name than mine.

63
00:02:22.04 --> 00:02:24.05
Change the number at the
end to something else,

64
00:02:24.05 --> 00:02:26.07
but remember what you chose.

65
00:02:26.07 --> 00:02:28.04
Okay, hit enter.

66
00:02:28.04 --> 00:02:30.04
And the bucket was created.

67
00:02:30.04 --> 00:02:33.04
Next, we need to upload our
model files into the bucket.

68
00:02:33.04 --> 00:02:36.06
We'll do that with this command.

69
00:02:36.06 --> 00:02:38.06
Again, we're using gsutil.

70
00:02:38.06 --> 00:02:42.06
cp means we want to copy files
from our computer to the Cloud.

71
00:02:42.06 --> 00:02:45.04
- R means we want to
copy files recursively,

72
00:02:45.04 --> 00:02:47.03
so all the subfolders
that we have are included

73
00:02:47.03 --> 00:02:49.03
when they're uploaded.

74
00:02:49.03 --> 00:02:51.07
Then we tell it what folder to upload,

75
00:02:51.07 --> 00:02:54.00
and then we have to
tell it where to upload.

76
00:02:54.00 --> 00:02:56.09
Here, you should put in the
same bucket name as before,

77
00:02:56.09 --> 00:03:00.00
and then a subfolder of earnings_v1/,

78
00:03:00.00 --> 00:03:02.08
and hit Enter.

79
00:03:02.08 --> 00:03:06.00
Great, our model files are
now stored on Google servers.

80
00:03:06.00 --> 00:03:08.06
Next, we have to tell the
Google Machine Learning Engine

81
00:03:08.06 --> 00:03:10.00
that we want to create a new model.

82
00:03:10.00 --> 00:03:12.00
We can do that with this command.

83
00:03:12.00 --> 00:03:13.08
Here, we're using the gcloud tool

84
00:03:13.08 --> 00:03:16.02
to call the ml-engine service.

85
00:03:16.02 --> 00:03:17.01
Inside of that service,

86
00:03:17.01 --> 00:03:20.06
we're asking it to create
a model with models create.

87
00:03:20.06 --> 00:03:22.06
We're going to name that model earnings,

88
00:03:22.06 --> 00:03:24.01
and we're asking it to create that model

89
00:03:24.01 --> 00:03:27.00
in the same uscentral1 region.

90
00:03:27.00 --> 00:03:31.00
Hit Enter, and the model
was created successfully.

91
00:03:31.00 --> 00:03:32.07
If you receive an error in this step,

92
00:03:32.07 --> 00:03:34.06
make sure you've enabled
the ml-engine service

93
00:03:34.06 --> 00:03:36.06
inside the Google console.

94
00:03:36.06 --> 00:03:37.06
We've created the named model

95
00:03:37.06 --> 00:03:39.06
in the Google Cloud
Machine Learning service,

96
00:03:39.06 --> 00:03:42.03
but the model is just
an empty placeholder.

97
00:03:42.03 --> 00:03:43.08
The Google Cloud Machine Learning service

98
00:03:43.08 --> 00:03:46.03
lets you upload multiple
versions of the same model.

99
00:03:46.03 --> 00:03:47.04
To actually use a model,

100
00:03:47.04 --> 00:03:50.01
we need to upload the
first version of the model.

101
00:03:50.01 --> 00:03:51.09
Let's try to create a named version.

102
00:03:51.09 --> 00:03:54.09
We'll use the gcloud tool again.

103
00:03:54.09 --> 00:03:57.04
Here, we're using gcloud
to call the ml-engine.

104
00:03:57.04 --> 00:03:59.04
We're asking it to create a new version.

105
00:03:59.04 --> 00:04:01.03
We're calling the version v1.

106
00:04:01.03 --> 00:04:03.06
We're telling it that the
model's name is earnings,

107
00:04:03.06 --> 00:04:05.02
and we're telling it
where to find the files

108
00:04:05.02 --> 00:04:07.01
to use to create this version.

109
00:04:07.01 --> 00:04:07.09
This is the same location

110
00:04:07.09 --> 00:04:10.09
where we just uploaded the files earlier.

111
00:04:10.09 --> 00:04:17.01
Now we'll hit Enter, and this
might take a few minutes.

112
00:04:17.01 --> 00:04:19.01
Great, our model is now live in the Cloud,

113
00:04:19.01 --> 00:04:20.08
and ready to be used.

114
00:04:20.08 --> 00:04:22.00
We can try out our model

115
00:04:22.00 --> 00:04:25.09
by using the gcloud predict command.

116
00:04:25.09 --> 00:04:27.04
Here we're calling gcloud.

117
00:04:27.04 --> 00:04:30.00
We're asking it to talk
to the ml-engine service,

118
00:04:30.00 --> 00:04:31.06
do the predict function,

119
00:04:31.06 --> 00:04:33.09
the model we want to call is earnings,

120
00:04:33.09 --> 00:04:35.03
and the data we want to feed in

121
00:04:35.03 --> 00:04:39.08
is the sample_input_prescaled.json
file we saw earlier.

122
00:04:39.08 --> 00:04:42.03
And hit Enter.

123
00:04:42.03 --> 00:04:45.00
Great, our model just made
a prediction from the Cloud.

124
00:04:45.00 --> 00:04:47.02
Now we can access the model
from anywhere in the world,

125
00:04:47.02 --> 00:04:49.04
and it will run from Google's servers.

126
00:04:49.04 --> 00:04:52.05
There are several ways we can
use our Cloud-based model.

127
00:04:52.05 --> 00:04:55.01
If you want to make a few
predictions on a small dataset,

128
00:04:55.01 --> 00:04:58.02
you can just use the gcloud
command, like we've done here.

129
00:04:58.02 --> 00:04:59.03
If you want to make predictions

130
00:04:59.03 --> 00:05:01.03
for thousands or millions of items,

131
00:05:01.03 --> 00:05:03.09
you can upload a data file
to a Cloud storage bucket

132
00:05:03.09 --> 00:05:05.08
and then use the gcloud command

133
00:05:05.08 --> 00:05:08.02
to make predictions from that data file.

134
00:05:08.02 --> 00:05:11.00
You can also use the Google
Cloud API Client Library

135
00:05:11.00 --> 00:05:12.07
for any programming language

136
00:05:12.07 --> 00:05:15.06
to make calls to your model
from any other program.

